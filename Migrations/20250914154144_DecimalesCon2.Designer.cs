// <auto-generated />
using System;
using GestionClientesMyM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionClientesMyM.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250914154144_DecimalesCon2")]
    partial class DecimalesCon2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GestionClientesMyM.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pagina")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Persona")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("GestionClientesMyM.Models.ClienteProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaInstalacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaProximoPago")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Importe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MesGratis")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoVersionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("ProductoVersionId");

                    b.ToTable("ClientesProductos");
                });

            modelBuilder.Entity("GestionClientesMyM.Models.ClienteProductoExtra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteProductoId")
                        .HasColumnType("int");

                    b.Property<int>("ExtraId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteProductoId");

                    b.HasIndex("ExtraId");

                    b.ToTable("ClientesProductosExtras");
                });

            modelBuilder.Entity("GestionClientesMyM.Models.Extra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Extras");
                });

            modelBuilder.Entity("GestionClientesMyM.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteProductoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("ImportePagado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteProductoId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("GestionClientesMyM.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PrecioInicial")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("GestionClientesMyM.Models.ProductoVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CostoInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductosVersiones");
                });

            modelBuilder.Entity("GestionClientesMyM.Models.ClienteProducto", b =>
                {
                    b.HasOne("GestionClientesMyM.Models.Cliente", "Cliente")
                        .WithMany("ClientesProductos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionClientesMyM.Models.Producto", "Producto")
                        .WithMany("ClientesProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionClientesMyM.Models.ProductoVersion", "ProductoVersion")
                        .WithMany("ClientesProductos")
                        .HasForeignKey("ProductoVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Producto");

                    b.Navigation("ProductoVersion");
                });

            modelBuilder.Entity("GestionClientesMyM.Models.ClienteProductoExtra", b =>
                {
                    b.HasOne("GestionClientesMyM.Models.ClienteProducto", "ClienteProducto")
                        .WithMany("ClientesProductosExtras")
                        .HasForeignKey("ClienteProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionClientesMyM.Models.Extra", "Extra")
                        .WithMany("ClientesProductosExtras")
                        .HasForeignKey("ExtraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClienteProducto");

                    b.Navigation("Extra");
                });

            modelBuilder.Entity("GestionClientesMyM.Models.Pago", b =>
                {
                    b.HasOne("GestionClientesMyM.Models.ClienteProducto", "ClienteProducto")
                        .WithMany("Pagos")
                        .HasForeignKey("ClienteProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClienteProducto");
                });

            modelBuilder.Entity("GestionClientesMyM.Models.ProductoVersion", b =>
                {
                    b.HasOne("GestionClientesMyM.Models.Producto", "Producto")
                        .WithMany("ProductosVersiones")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("GestionClientesMyM.Models.Cliente", b =>
                {
                    b.Navigation("ClientesProductos");
                });

            modelBuilder.Entity("GestionClientesMyM.Models.ClienteProducto", b =>
                {
                    b.Navigation("ClientesProductosExtras");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("GestionClientesMyM.Models.Extra", b =>
                {
                    b.Navigation("ClientesProductosExtras");
                });

            modelBuilder.Entity("GestionClientesMyM.Models.Producto", b =>
                {
                    b.Navigation("ClientesProductos");

                    b.Navigation("ProductosVersiones");
                });

            modelBuilder.Entity("GestionClientesMyM.Models.ProductoVersion", b =>
                {
                    b.Navigation("ClientesProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
